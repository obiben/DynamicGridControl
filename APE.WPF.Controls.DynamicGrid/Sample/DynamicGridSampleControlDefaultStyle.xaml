<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:dynamicGrid="clr-namespace:APE.WPF.Controls.DynamicGrid"
	mc:Ignorable="d">

	<Style TargetType="{x:Type dynamicGrid:DynamicGridSampleControl}">
		<!-- Styles the control's border -->
		<Setter Property="BorderBrush" Value="Gray" />
		<Setter Property="BorderThickness" Value="1" />
		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type dynamicGrid:DynamicGridSampleControl}">

					<!-- Resources the template is unsing-->
					<ControlTemplate.Resources>
						<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

						<!-- Default grid template -->
						<ItemsPanelTemplate x:Key="GridPanelTemplate">
							<Grid dynamicGrid:GridHelpers.RowCount="{Binding RowCount, RelativeSource={RelativeSource FindAncestor, AncestorType=dynamicGrid:DynamicGridSampleControl}}" 
										  dynamicGrid:GridHelpers.ColumnCount="{Binding ColumnCount, RelativeSource={RelativeSource FindAncestor, AncestorType=dynamicGrid:DynamicGridSampleControl}}" />
						</ItemsPanelTemplate>

						<!-- Default container style -->
						<Style x:Key="GridPanelContainerStyle">
							<Setter Property="Grid.Row" Value="{Binding Row}" />
							<Setter Property="Grid.Column" Value="{Binding Column}" />
						</Style>
					</ControlTemplate.Resources>

					<Border Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">

						<Grid>
							<!-- The row / column - headers' style -->
							<ItemsControl ItemsSource="{TemplateBinding GridHeaders}" ItemsPanel="{StaticResource GridPanelTemplate}"
										  ItemContainerStyle="{StaticResource GridPanelContainerStyle}">
								<ItemsControl.ItemTemplate>
									<DataTemplate DataType="dynamicGrid:DynamicGridHeader">
										<ContentPresenter Content="{Binding Content}"
														  ContentTemplate="{Binding HeaderTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType=dynamicGrid:DynamicGridSampleControl}}"
														  ContentTemplateSelector="{Binding HeaderTemplateSelector, RelativeSource={RelativeSource FindAncestor, AncestorType=dynamicGrid:DynamicGridSampleControl}}" />
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>

							<!-- Rows (gridlines) -->
							<ItemsControl ItemsSource="{TemplateBinding GridRows}" ItemsPanel="{StaticResource GridPanelTemplate}">

								<ItemsControl.ItemTemplate>
									<DataTemplate DataType="dynamicGrid:DynamicGridHeader">
										<!-- GRIDLINES (ROW) TEMPLATE -->
										<Border BorderThickness="0,1,0,0" BorderBrush="DarkGray" SnapsToDevicePixels="True"></Border>
										<!-- GRIDLINES (ROW) TEMPLATE -->
									</DataTemplate>
								</ItemsControl.ItemTemplate>

								<ItemsControl.ItemContainerStyle>
									<Style>
										<Setter Property="Grid.Row" Value="{Binding Row}" />
										<Setter Property="Grid.Column" Value="{Binding Column}" />
										<Setter Property="Grid.ColumnSpan" Value="{Binding ColumnCount, RelativeSource={RelativeSource FindAncestor, AncestorType=dynamicGrid:DynamicGridSampleControl}}" />
									</Style>
								</ItemsControl.ItemContainerStyle>
							</ItemsControl>

							<!-- Columns (gridlines) -->
							<ItemsControl ItemsSource="{TemplateBinding GridColumns}" ItemsPanel="{StaticResource GridPanelTemplate}">

								<ItemsControl.ItemTemplate>
									<DataTemplate DataType="dynamicGrid:DynamicGridHeader">
										<!-- GRIDLINES (COLUMN) TEMPLATE -->
										<Border BorderThickness="1,0,0,0" BorderBrush="DarkGray"></Border>
										<!-- GRIDLINES (COLUMN) TEMPLATE -->
									</DataTemplate>
								</ItemsControl.ItemTemplate>

								<ItemsControl.ItemContainerStyle>
									<Style>
										<Setter Property="Grid.Row" Value="{Binding Row}" />
										<Setter Property="Grid.Column" Value="{Binding Column}" />
										<Setter Property="Grid.RowSpan" Value="{Binding RowCount, RelativeSource={RelativeSource FindAncestor, AncestorType=dynamicGrid:DynamicGridSampleControl}}" />
									</Style>
								</ItemsControl.ItemContainerStyle>

							</ItemsControl>

							<!-- Data cells -->
							<ItemsControl ItemsSource="{TemplateBinding DataItems}" ItemsPanel="{StaticResource GridPanelTemplate}"
										  ItemContainerStyle="{StaticResource GridPanelContainerStyle}">
								<ItemsControl.ItemTemplate>
									<DataTemplate DataType="dynamicGrid:DynamicGridDataItem">
										<ContentPresenter x:Name="Content" Content="{Binding Content}"
														  ContentTemplate="{Binding DataItemTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType=dynamicGrid:DynamicGridSampleControl}}"
														  ContentTemplateSelector="{Binding DataItemTemplateSelector, RelativeSource={RelativeSource FindAncestor, AncestorType=dynamicGrid:DynamicGridSampleControl}}" />
										<DataTemplate.Triggers>
											<!-- If you want to show cells with no data present, remove the following trigger -->
											<DataTrigger Binding="{Binding Content}" Value="{x:Null}">
												<Setter TargetName="Content" Property="Visibility" Value="Hidden" />
											</DataTrigger>
										</DataTemplate.Triggers>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>

							<!-- Wait layer that is shown when the control is updating -->
							<Control Visibility="{TemplateBinding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}"
									 Template="{Binding WaitLayerTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType=dynamicGrid:DynamicGridSampleControl}}"	/>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
